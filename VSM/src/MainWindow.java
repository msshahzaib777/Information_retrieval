
import VSM.Vectors;
import VSM.Vectorize;
import VSM.Stats;

import java.awt.*;
import java.io.*;
import java.util.*;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author muham
 */
public class MainWindow extends javax.swing.JFrame {
    static String Path = System.getProperty("user.dir") + "\\src\\dataset\\";
    static Vectorize preprocess;
    static Vectors Vec;
    static String Query; 
    static Stats stat;
    static int filecount = 50;
    static ArrayList<Double> list; 
    static ArrayList<Integer> resultInd; 
    static LinkedList<Integer> lind;
    static double alphaup = 1; 
    static double alphadown = 0.001;
    /**
     * Creates new form MainWindow
     */
    
    public MainWindow() {
        initComponents();
        Resultpanel.setLayout(new javax.swing.BoxLayout(Resultpanel, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setBorder(null);
        String URL = System.getProperty("user.dir") + "\\src\\img\\pic.png";
        ImageIcon img = new ImageIcon(URL);
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchbar = new java.awt.TextField();
        searchbutton = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        Resultpanel = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        author = new javax.swing.JLabel();
        stats = new javax.swing.JLabel();
        indexing = new javax.swing.JLabel();
        options = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Boolean Retrieval Model");
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        searchbar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchbar.setFont(new java.awt.Font("Corbel Light", 0, 18)); // NOI18N
        searchbar.setText("Search");
        searchbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbarActionPerformed(evt);
            }
        });
        getContentPane().add(searchbar);
        searchbar.setBounds(130, 130, 611, 27);

        searchbutton.setLabel("Go");
        searchbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchbuttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchbuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchbuttonMouseExited(evt);
            }
        });
        searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(searchbutton);
        searchbutton.setBounds(770, 130, 172, 27);

        Resultpanel.setLayout(new javax.swing.BoxLayout(Resultpanel, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(Resultpanel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 210, 919, 440);

        heading.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("Vector Space Model");
        getContentPane().add(heading);
        heading.setBounds(382, 16, 314, 57);

        author.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        author.setText("<html><h4>By Muhammad Shahzaib<br/>  K163810</h4> </html>");
        getContentPane().add(author);
        author.setBounds(680, 60, 221, 50);

        stats.setBackground(new java.awt.Color(255, 255, 255));
        stats.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        stats.setForeground(new java.awt.Color(0, 51, 255));
        stats.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stats.setText("<html><u>Want some STATS? </u></html>");
        stats.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statsMouseClicked(evt);
            }
        });
        getContentPane().add(stats);
        stats.setBounds(980, 70, 235, 134);

        indexing.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        indexing.setForeground(new java.awt.Color(0, 0, 255));
        indexing.setText("<html><u>Vectorize Again</u></html");
        indexing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                indexingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                indexingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                indexingMouseExited(evt);
            }
        });
        getContentPane().add(indexing);
        indexing.setBounds(630, 180, 110, 17);

        options.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        options.setForeground(new java.awt.Color(0, 0, 255));
        options.setText("<html><u>Change Variables</u></html>");
        options.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                optionsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                optionsMouseExited(evt);
            }
        });
        getContentPane().add(options);
        options.setBounds(500, 180, 119, 17);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void run(){
        lind = new LinkedList();
        Query = searchbar.getText();
        ArrayList<Double> query = preprocess.query2vector(Query, Vec);
        for(int i=0; i<filecount; i++){
            double angle = angle(Vec.DocVec[i], query);
            if(angle <= alphaup && angle >= alphadown){
                list.add(angle);
                lind.add(i);
            }
            
        }
        print();
    }
    
    private void MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        JLabel selected = (JLabel)evt.getSource();
        selected.setForeground(Color.blue);
        String words[] = selected.getText().split(" ");
        String numb = words[2];
        String s = Path + "\\ShortStories\\" + numb  +  ".txt";
        story str = new story(s);
        str.setVisible(true);
    } 
    
    private void MouseEntered(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        JLabel selected = (JLabel)evt.getSource();
        selected.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Resultpanel.revalidate();
        Resultpanel.repaint();
    }
    
    private void MouseExited(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        JLabel selected = (JLabel)evt.getSource();
        selected.setBorder(null);
        Resultpanel.revalidate();
        Resultpanel.repaint();
    }
    
    private void searchbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbuttonMouseClicked
             run();
    }//GEN-LAST:event_searchbuttonMouseClicked

    private void searchbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbarActionPerformed
       run();
    }//GEN-LAST:event_searchbarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
    }//GEN-LAST:event_formWindowOpened

    private void searchbuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbuttonMouseEntered
        // TODO add your handling code here:
        Button sbutton = (Button) evt.getSource();
        sbutton.setBackground(Color.darkGray);
        sbutton.setForeground(Color.WHITE);
    }//GEN-LAST:event_searchbuttonMouseEntered

    private void searchbuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbuttonMouseExited
        // TODO add your handling code here:
        Button sbutton = (Button) evt.getSource();
        sbutton.setBackground(Color.LIGHT_GRAY);
        sbutton.setForeground(Color.BLACK);
        
    }//GEN-LAST:event_searchbuttonMouseExited

    private void searchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonActionPerformed
        
    }//GEN-LAST:event_searchbuttonActionPerformed

    private void statsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statsMouseClicked
        // TODO add your handling code here:
        stat.calculation();
        stats.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Set Statistics:", 
                                                                            javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                                                                            javax.swing.border.TitledBorder.DEFAULT_POSITION,
                                                                            new java.awt.Font("Tahoma", 0, 15)));
        stats.setFont(new Font(stats.getFont().getName(), Font.PLAIN, 11));
        stats.setForeground(Color.BLACK);
        stats.setText(stat.getstats());
    }//GEN-LAST:event_statsMouseClicked

    private void indexingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_indexingMouseClicked
        // TODO add your handling code here:
        Vec = preprocess.makeVector();
    }//GEN-LAST:event_indexingMouseClicked

    private void indexingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_indexingMouseEntered
        // TODO add your handling code here:
        indexing.setForeground(Color.darkGray);
        
    }//GEN-LAST:event_indexingMouseEntered

    private void indexingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_indexingMouseExited
        // TODO add your handling code here:
        indexing.setForeground(Color.blue);
    }//GEN-LAST:event_indexingMouseExited

    private void optionsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionsMouseEntered
        // TODO add your handling code here:
        options.setForeground(Color.darkGray);
    }//GEN-LAST:event_optionsMouseEntered

    private void optionsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionsMouseExited
        // TODO add your handling code here:
        options.setForeground(Color.blue);
    }//GEN-LAST:event_optionsMouseExited

    private void optionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionsMouseClicked
        // TODO add your handling code here:
        Popup pop = new Popup(this, true, filecount, Path, alphadown, alphaup);
        pop.setVisible(true);
        File tmpDir = new File(pop.returnpath());
        if(tmpDir.exists()){
            Path = pop.returnpath();
        }
        filecount = pop.returnfilecount();
        alphaup = pop.returnamax();
        alphadown = pop.returnamin();
        change();
        pop.dispose();
    }//GEN-LAST:event_optionsMouseClicked
          
    public void change(){
        preprocess.path = Path;
        stat.path = Path;
        preprocess.filecount = filecount;
        stat.filecount = filecount;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>
        preprocess = new Vectorize(filecount);
        Vec = preprocess.makeVector();
        Path = preprocess.path;
        stat = new Stats(filecount);
        list = new ArrayList();
        resultInd = new ArrayList();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }
    
    public void print(){
        Rank();
        Resultpanel.removeAll();
        Resultpanel.revalidate();
        Resultpanel.repaint();
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Results", 
                                                                            javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                                                                            javax.swing.border.TitledBorder.DEFAULT_POSITION,
                                                                            new java.awt.Font("Tahoma", 0, 36)));
        JLabel count = new JLabel();
        count.setText("Documents in result: " + list.size());
        count.setFont(new Font(count.getFont().getName(), Font.PLAIN, 14));
        count.setForeground(Color.GRAY);
        Resultpanel.add(count);
        JLabel result[] = new JLabel[list.size()];
        for(int i=0; i<list.size(); i++){
            result[i] = new JLabel();
            result[i].setVisible(true);
            int docID = resultInd.get(i) + 1;
            String answer = "<html><b>Document #: " + String.valueOf(docID) + " (Score: "+ String.format("%.5g%n", list.get(i)) +") </b><br />";
            answer = answer +  "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
                     +  Vec.stories[docID-1].getstory() + "<br /><br /></html>";
            result[i].setText(answer);
            result[i].setFont(new Font(result[i].getFont().getName(), Font.PLAIN, 14));
            
            result[i].addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    MouseClicked(evt);
                }
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    MouseEntered(evt);
                }
                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    MouseExited(evt);
                }
            });
            Resultpanel.add(result[i]); 
        }  
        Resultpanel.revalidate();
        
        list.clear();
        resultInd.clear();
    }
    
    public void Rank(){
        LinkedList<Double> ll = new LinkedList();
        ArrayList<Double> sorted = new ArrayList();
        ll.addAll(list);
        while(!(ll.isEmpty())){
            int l = 0;
            double max = ll.getFirst();
            int maxInd = lind.getFirst();
            for(int i=0; i<ll.size(); i++){
                if(max < ll.get(i)){
                    max = ll.get(i);
                    maxInd = lind.get(i);
                    l=i;
                }
            }
            ll.remove(l);
            lind.remove(l);
            sorted.add(max);
            resultInd.add(maxInd);
        }
        list.clear();
        list = (ArrayList<Double>) sorted.clone();
    }
    
    public static double angle(ArrayList<Double> v1, ArrayList<Double> v2){
        double angle; 
        double dotpro = dotproduct(v1, v2);
        angle = dotpro;
        return angle;
    }
    
    public static double dotproduct(ArrayList<Double> v1, ArrayList<Double> v2){
        double dotpro;
        double sum = 0;
        for(int i=0; i<v1.size(); i++){
            double a = v1.get(i);
            double b = v2.get(i);
            sum = sum + a * b;
        }
        dotpro = sum;
        return dotpro;
    }
    
    public static double length(ArrayList<Double> v){
        double length = 0;
        for(int i=0; i<v.size(); i++){
            double a = v.get(i);
            length += a*a;
        }
        length = Math.sqrt(length);
        return length;
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel Resultpanel;
    public javax.swing.JLabel author;
    public javax.swing.JLabel heading;
    private javax.swing.JLabel indexing;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel options;
    public java.awt.TextField searchbar;
    public java.awt.Button searchbutton;
    private javax.swing.JLabel stats;
    // End of variables declaration//GEN-END:variables
}
